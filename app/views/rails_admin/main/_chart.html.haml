- @acumulate = params[:acumulate] || 'beginning_of_month'
- @data_field = (params[:data_field] || :created_at).to_sym
- @chart = params[:chart] || 'line_chart'
- @calculation = params[:calculation] || 'sum'

- acumulate_types = {'daily' => 'beginning_of_day', 'weekly' => 'beginning_of_week', 'monthly' => 'beginning_of_month', 'quarterly' => 'beginning_of_quarter','yearly' => 'beginning_of_year', 'week days' => 'wday', 'hours' => 'hour' }
- calculation_types = {'count' => :count, 'max' => :max, 'min' => :min,'sum' => 'sum'}

- calculation_types['mean'] = :mean            if Array.method_defined? :mean
- calculation_types['median'] = :median        if Array.method_defined? :median
- calculation_types['mode'] = :mode            if Array.method_defined? :mode
- calculation_types['variance'] = :variance    if Array.method_defined? :variance

- chart_types = {'line chart' => 'line_chart','column chart' => 'column_chart', 'area chart' => :area_chart, 'bar chart' => :bar_chart, 'pie chart' => :pie_chart}

- data_fields = []
- numeric_fields = []
- if @filterable_fields.present?
  - @filterable_fields.each do |field|
    - if ( field.type == :float || field.type == :integer || field.type == :decimal ) && field.name != :id
      - @met = params[:met] || field.name
      - numeric_fields << field.name
    - elsif field.type == :date || field.type == :datetime
      - data_fields << field
- if @met
  - klass = @abstract_model.model_name.constantize
  - field = data_fields.first

  = content_for :chart_controls do
    %label= t('admin.charts.axisa_label')
    %select.input-small{name: :data_field }
      - data_fields.each do |f|
        - if @data_field == f.name
          %option{selected: 'selected', value: f.name }
            = f.label
        - else
          %option{value: f.name }
            = f.label
    %label= t('admin.charts.axisa_field_label')
    = select_tag :met, options_for_select( numeric_fields, @met ), class: 'input-small'
    = select_tag :acumulate, options_for_select( acumulate_types, @acumulate ), class: 'input-small'
    = select_tag :calculation, options_for_select( calculation_types, @calculation ), class: 'input-small'
    = select_tag :chart, options_for_select( chart_types, @chart ), class: 'input-small'

  = content_for :chart_chart do
    - all_objects = @objects.limit(klass.count).offset(0)
    - data = klass.data_by(all_objects,@met,@data_field,@calculation, @acumulate )[0][:data]
    = send(@chart, data, library: {chart:{zoomType:'x',style: {overflow: 'visible'}}} )
